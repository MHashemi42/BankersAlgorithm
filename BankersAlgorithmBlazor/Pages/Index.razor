@page "/"

<div class="container mt-5">
    <h1 class="text-center">الگوریتم بانکداران</h1>
    <div class="row mt-5 text-center justify-content-evenly">
        <div class="col-3 col-lg-2">
            <label for="resourceA" class="form-label">A تعداد منبع</label>
            <input type="number" min="0" @bind="resourceA" class="form-control" id="resourceA">
        </div>
        <div class="col-3 col-lg-2">
            <label for="resourceB" class="form-label">B تعداد منبع</label>
            <input type="number" min="0" @bind="resourceB" class="form-control" id="resourceB">
        </div>
        <div class="col-3 col-lg-2">
            <label for="resourceC" class="form-label">C تعداد منبع</label>
            <input type="number" min="0" @bind="resourceC" class="form-control" id="resourceC">
        </div>
    </div>
    <div class="row justify-content-center mt-4">
        <Matrix MatrixName="Allocation" MatrixValues="@allocationMatrix"></Matrix>
        <Matrix MatrixName="Maximum" MatrixValues="@maxMatrix"></Matrix>
        <Matrix MatrixName="Need" MatrixValues="@needMatrix"></Matrix>
        <Available AvailableValues="@allAvailableRecords"></Available>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 px-3 mt-3">
            <div class="row justify-content-center  @(showResult ? "" : "invisible")" dir="rtl">
                <div class="card text-bg-@(isSafe ? "success" : "danger") mb-3" style="max-width: 20rem;">
                    <div class="card-header">نتیجه الگوریتم</div>
                    <div class="card-body">
                        <h5 class="card-title">@(isSafe ? "امن" : "ناامن")</h5>
                        <p class="card-text">
                            @answer
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row justify-content-center my-4">
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="StartAlgorithm">شروع الگوریتم</button>
        </div>
        <div class="col-auto">
            <button class="btn btn-danger" @onclick="ResetValues">ریست کردن مقادیر</button>
        </div>
    </div>
</div>

@code {
    const int numberOfProcesses = 5;
    const int numberOfResources = 3;

    int resourceA = 10;
    int resourceB = 5;
    int resourceC = 7;

    int[,] allocationMatrix;
    int[,] maxMatrix;
    int[,] needMatrix;
    int[] available;
    int[,] allAvailableRecords;

    bool showResult = false;
    bool isSafe = false;
    string answer = string.Empty;

    public Index()
    {
        allocationMatrix = new int[,]
        {
            {0,1,0},
            {2,0,0},
            {3,0,2},
            {2,1,1},
            {0,0,2}
        };
        maxMatrix = new int[,]
        {
            {7,5,3},
            {3,2,2},
            {9,0,2},
            {2,2,2},
            {4,3,3}
        };
        needMatrix = new int[numberOfProcesses, numberOfResources];
        available = new int[numberOfResources];
        allAvailableRecords = new int[numberOfProcesses + 1, numberOfResources];
    }

    public void StartAlgorithm()
    {
        BankersAlgorithm.CalculateNeedMatrix(maxMatrix, allocationMatrix, needMatrix);

        available[0] = resourceA;
        available[1] = resourceB;
        available[2] = resourceC;

        BankersAlgorithm.CalculateAvailable(allocationMatrix, available);

        BankersAlgorithmResult result = BankersAlgorithm
            .IsSafe(available,allocationMatrix, needMatrix);

        allAvailableRecords = result.allAvailableRecords;

        isSafe = result.IsSafe;
        CreateAnswer(result.SafeSequence);
        showResult = true;
    }

    public void ResetValues()
    {
        resourceA = 0;
        resourceB = 0;
        resourceC = 0;
        Array.Clear(allocationMatrix);
        Array.Clear(maxMatrix);
        Array.Clear(needMatrix);
        Array.Clear(available);
        showResult = false;
    }

    public void CreateAnswer(int[] safeSequence)
    {
        answer = string.Empty;
        for (int i = 0; i < numberOfProcesses; i++)
        {
            if (safeSequence[i] == -1)
            {
                answer += "X";
            }
            else
            {
                answer += "P" + safeSequence[i];
            }

            if (i != numberOfProcesses - 1)
            {
                answer += " -> ";
            }
        }
    }
}